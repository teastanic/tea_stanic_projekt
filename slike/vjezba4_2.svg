<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg1"
   inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
   sodipodi:docname="StaniÄ‡_dm4.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.75900673"
     inkscape:cx="109.35344"
     inkscape:cy="527.66331"
     inkscape:window-width="1920"
     inkscape:window-height="1009"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer4" />
  <defs
     id="defs1">
    <pattern
       inkscape:collect="always"
       xlink:href="#ap108"
       preserveAspectRatio="xMidYMid"
       id="pattern25"
       patternTransform="matrix(0.05,0,0,0.05,1180.0034,543.26185)"
       x="0"
       y="0" />
    <pattern
       patternUnits="userSpaceOnUse"
       preserveAspectRatio="xMidYMid"
       width="377.87535"
       height="195.94893"
       patternTransform="translate(1180.0034,543.26185) scale(0.2)"
       id="ap108"
       inkscape:collect="always"
       inkscape:isstock="true"
       inkscape:label="ap108">
      <path
         id="path19386"
         style="opacity:1;fill:#f32500;fill-opacity:1;stroke:none;stroke-width:9.00491;stroke-linecap:round;stroke-dasharray:none;stroke-opacity:1;paint-order:markers fill stroke"
         d="m 0,0 v 2.2140472 c 4.4590488,0 7.9915843,3.5324221 7.9915843,7.9914708 0,2.334803 -0.9761386,4.406249 -2.5390111,5.854526 C 3.6481134,15.954595 1.8305764,15.900548 0,15.900548 v 8.514746 C 36.117581,24.419074 66.833877,47.291376 78.527206,79.30938 54.306557,83.503332 33.283767,97.075238 19.309682,116.13857 13.081134,114.80678 6.6222614,114.1008 0,114.1008 v 8.51463 c 36.056731,0 66.729902,22.75393 78.466545,54.70681 -3.477317,0.60461 -6.887698,1.39937 -10.221997,2.37937 C 57.609298,152.38658 31.038161,132.98071 0,132.98071 v 8.53126 c 27.393184,0 50.75588,16.9598 60.197934,40.96536 -3.244725,1.28874 -6.402104,2.75282 -9.456529,4.3841 C 42.931351,166.43516 23.134299,151.88289 0,151.88277 v 8.53126 c 20.113058,1.2e-4 37.142249,12.8868 43.306129,30.87549 -2.201953,1.45354 -4.315956,3.02982 -6.383244,4.65941 H 52.10177 c 12.450369,-7.22729 26.915339,-11.37861 42.369865,-11.37861 15.446585,0 29.897275,4.15702 42.342345,11.37861 h 15.22844 c -11.86855,-9.36877 -26.05051,-15.9292 -41.56018,-18.62669 11.7495,-31.91486 42.40982,-54.70125 78.45544,-54.70125 36.03877,0 66.69516,22.77985 78.45002,54.68474 -15.54841,2.68758 -29.76752,9.25428 -41.66487,18.6432 h 15.234 c 12.44454,-7.22249 26.89508,-11.37861 42.34231,-11.37861 15.45755,0 29.92252,4.14897 42.37534,11.37861 h 15.16789 c -2.03823,-1.60774 -4.11961,-3.16249 -6.28966,-4.59886 6.14672,-18.01973 23.18759,-30.93592 43.32264,-30.93604 v -8.53126 c -23.15323,1.2e-4 -42.96673,14.57533 -50.7634,35.02821 -3.05427,-1.63574 -6.20587,-3.10772 -9.45101,-4.4005 9.43332,-24.02389 32.80834,-40.99851 60.21441,-40.99851 v -8.53126 c -31.04848,0 -57.62748,19.41887 -68.25547,46.74841 -3.33211,-0.98321 -6.74094,-1.7822 -10.21659,-2.39036 11.73229,-31.96154 42.40932,-54.72333 78.47206,-54.72333 v -8.51463 c -6.65541,0 -13.1458,0.7149 -19.40322,2.0598 -13.95001,-19.048474 -34.93864,-32.618036 -59.12391,-36.834704 11.69299,-32.019704 42.4091,-54.90599 78.52709,-54.910602 v -8.514746 c -1.82985,2.27e-4 -3.64871,0.05405 -5.45246,0.159496 -1.56283,-1.448277 -2.53901,-3.519723 -2.53901,-5.854526 0,-4.4590487 3.53246,-7.9914708 7.99147,-7.9914708 V 0 h -12.92625 c -2.23211,2.8162394 -3.57996,6.3609071 -3.57996,10.205518 0,2.460888 0.55128,4.806576 1.53108,6.912 -1.53305,0.250961 -3.05348,0.538885 -4.56022,0.86468 C 356.075,14.904869 353.62624,11.971389 351.00934,9.1977071 351.12915,5.9428157 351.84586,2.8539591 353.01411,0 h -8.9994 c -0.20258,0.66856063 -0.4097,1.3369323 -0.57278,2.0212535 C 342.61841,1.3227591 341.75622,0.66984567 340.90843,0 h -15.16784 c 9.09403,5.2938331 17.12031,12.219099 23.64952,20.400038 -3.84964,1.251968 -7.593,2.745335 -11.20241,4.472239 C 324.99258,9.8618079 305.76639,0.29627717 284.31802,0 h -2.03229 C 260.86598,0.2944252 241.65906,9.8317228 228.46012,24.806173 224.84893,23.085694 221.10297,21.595729 217.2522,20.350488 223.77449,12.189657 231.78663,5.2834016 240.86321,0 h -15.19544 c -6.55661,5.1851339 -12.42346,11.208076 -17.38742,17.943723 -6.23879,-1.336479 -12.70873,-2.043326 -19.34267,-2.043326 -6.66902,0 -13.17253,0.715049 -19.44171,2.065285 C 164.52986,11.221191 158.65984,5.1908031 152.09752,0 h -15.18995 c 9.08643,5.288315 17.10621,12.201298 23.63308,20.372523 -3.84983,1.24902 -7.59254,2.748132 -11.20245,4.472126 C 136.14361,9.8486929 116.92724,0.29586142 95.49052,0 H 93.45275 C 72.019654,0.29593701 52.80378,9.8474079 39.60514,24.839244 35.994369,23.115969 32.25891,21.620787 28.408139,20.372523 34.934249,12.2016 42.955654,5.2884283 52.041222,0 H 36.862375 C 36.04543,0.64595906 35.211553,1.2721134 34.416907,1.944189 34.258167,1.2850016 34.055584,0.64437165 33.860674,0 h -9.004876 c 1.155515,2.8222866 1.873437,5.8721386 2.004737,9.0874961 -2.651452,2.8004409 -5.132409,5.7612849 -7.424239,8.8727429 -1.47549,-0.31748 -2.965984,-0.597052 -4.466608,-0.842721 0.981166,-2.106595 1.536643,-4.449298 1.536643,-6.912 C 16.506331,6.3609071 15.158438,2.8162394 12.926362,0 Z m 94.471635,8.591811 c 18.609415,0 35.351545,7.853443 47.111845,20.427628 -3.54119,2.129348 -6.92814,4.489815 -10.13945,7.060687 -9.47822,-9.471912 -22.54949,-15.349606 -36.972395,-15.349606 -14.415799,0 -27.485594,5.869493 -36.966917,15.333089 C 54.292762,33.493153 50.907402,31.136844 47.365342,29.008479 59.12931,16.440113 75.867288,8.591811 94.471635,8.591811 Z m 188.827505,0 c 18.62619,0 35.38295,7.86652 47.14488,20.460661 -3.54131,2.132221 -6.92871,4.492082 -10.13945,7.066243 -9.48106,-9.492926 -22.56435,-15.388195 -37.00543,-15.388195 -14.39766,0 -27.45003,5.857323 -36.92841,15.300056 -3.21501,-2.569398 -6.60551,-4.92805 -10.15041,-7.055168 11.7625,-12.549997 28.48993,-20.383597 47.07882,-20.383597 z m -94.36146,15.823332 c 36.12147,0 66.84306,22.833865 78.53264,54.877569 -3.47712,0.597694 -6.89306,1.384138 -10.22755,2.357178 -10.59621,-27.393903 -37.2102,-46.869468 -68.30509,-46.869468 -31.10506,0 -57.72703,19.48868 -68.31602,46.896983 -3.33396,-0.976781 -6.74502,-1.76674 -10.22215,-2.368177 11.68516,-32.052208 42.4108,-54.894085 78.53817,-54.894085 z m -94.466045,4.92926 c 11.893605,0 22.655015,4.724825 30.528565,12.397606 -2.64412,2.551371 -5.13214,5.263257 -7.45727,8.112643 -5.93152,-5.895609 -14.08169,-9.561146 -23.071295,-9.561146 -8.980422,0 -17.126174,3.659565 -23.060221,9.544592 -2.325127,-2.850293 -4.818331,-5.55549 -7.462828,-8.107163 7.876346,-7.665978 18.635149,-12.386532 30.523049,-12.386532 z m 188.827505,0 c 11.91605,0 22.69515,4.743156 30.57252,12.441638 -2.64272,2.553902 -5.13407,5.260271 -7.4572,8.112605 -5.93522,-5.921273 -14.10334,-9.60514 -23.11532,-9.60514 -8.95729,0 -17.08056,3.642103 -23.01071,9.500598 -2.32796,-2.848214 -4.82132,-5.557304 -7.46827,-8.1072 7.87249,-7.641562 18.61258,-12.342501 30.47898,-12.342501 z m -94.36146,13.967169 c 27.4439,0 50.84511,17.021291 60.25296,41.097637 -3.24756,1.282659 -6.40433,2.741821 -9.46201,4.367471 -7.77887,-20.487949 -27.61232,-35.094198 -50.79095,-35.094274 -23.19497,7.6e-5 -43.04024,14.627225 -50.80744,35.138419 -3.05677,-1.629581 -6.2149,-3.092069 -9.46208,-4.378582 9.39908,-24.094564 32.81284,-41.130671 60.26952,-41.130671 z m -94.466045,5.601222 c 7.121655,0 13.487245,3.054765 17.899695,7.919962 -2.18049,3.25285 -4.16176,6.650683 -5.92075,10.178003 -2.23956,-4.366526 -6.776463,-7.396649 -11.978945,-7.396649 -5.196322,0 -9.737235,3.022035 -11.984504,7.380133 -1.757481,-3.527849 -3.73047,-6.925569 -5.90967,-10.178041 4.416265,-4.855786 10.780498,-7.903408 17.894174,-7.903408 z m 188.827505,0 c 7.14984,0 13.53494,3.081713 17.9492,7.980472 -2.18294,3.264605 -4.16228,6.67544 -5.92067,10.216592 -2.22138,-4.419704 -6.78682,-7.495748 -12.02853,-7.495748 -5.15622,0 -9.66444,2.977172 -11.92944,7.280996 -1.75718,-3.511635 -3.7344,-6.895068 -5.90963,-10.133972 4.41411,-4.822375 10.75344,-7.84834 17.83907,-7.84834 z m -94.36146,13.300875 c 20.15191,1.14e-4 37.20548,12.93687 43.3392,30.980145 -3.09922,2.037657 -6.07261,4.254199 -8.9003,6.636624 -3.70209,-15.589607 -17.74352,-27.251528 -34.4389,-27.251528 -16.72298,0 -30.78728,11.699944 -34.46091,27.328592 -2.82825,-2.389493 -5.79934,-4.614614 -8.90029,-6.658582 6.11739,-18.072567 23.18869,-31.035137 43.3612,-31.035251 z m -94.466045,6.019729 c 2.730859,0 4.852195,2.137852 4.852195,4.868712 0,2.604662 -1.929713,4.651843 -4.47772,4.835679 -0.125102,-5.29e-4 -0.249071,-0.0038 -0.374551,-0.0038 -0.125102,0 -0.249449,0.0038 -0.374551,0.0038 -2.549254,-0.184063 -4.494199,-2.231017 -4.494199,-4.835679 0,-2.73086 2.137852,-4.868712 4.868712,-4.868712 z m 188.827505,0 c 2.73082,0 4.85215,2.137852 4.85215,4.868712 0,2.604662 -1.92975,4.651843 -4.47764,4.835679 -0.1251,-5.29e-4 -0.24907,-0.0038 -0.37455,-0.0038 -0.12548,0 -0.24945,0.0038 -0.37455,0.0038 -2.54733,-0.185575 -4.4942,-2.232378 -4.4942,-4.835679 0,-2.73086 2.13785,-4.868712 4.86871,-4.868712 z m -94.36146,12.882218 c 14.55261,0 26.33011,11.435981 26.86601,25.852684 -2.7394,2.88306 -5.29875,5.93983 -7.65555,9.1536 -1.46441,-0.31105 -2.94455,-0.58575 -4.43361,-0.8262 1.10189,-2.20842 1.72944,-4.68892 1.72944,-7.30851 0,-9.0669 -7.43936,-16.506296 -16.50629,-16.506296 -9.06694,0 -16.50622,7.439396 -16.50622,16.506296 0,2.61736 0.61837,5.1016 1.71836,7.30851 -1.52013,0.24567 -3.02733,0.52906 -4.52168,0.84824 -2.33064,-3.18093 -4.85635,-6.20807 -7.56192,-9.06554 0.47958,-14.46875 12.28165,-25.962784 26.87146,-25.962784 z m -94.466045,5.452573 c 26.848745,0 50.723565,12.494778 66.201185,31.971551 -3.85391,1.24226 -7.59927,2.72659 -11.21348,4.44461 -13.40708,-15.31411 -33.07363,-25.009963 -54.987743,-25.009963 -21.915855,0 -41.587049,9.698953 -54.99874,25.015413 -3.609903,-1.7175 -7.347818,-3.20727 -11.196851,-4.45006 C 43.752,99.063836 67.623572,86.568189 94.471635,86.568189 Z m 188.827505,0 c 26.85944,0 50.74605,12.503546 66.22318,31.993471 -3.8499,1.24687 -7.58676,2.74496 -11.19693,4.46672 -13.40791,-15.33887 -33.09176,-25.053993 -55.02625,-25.053993 -21.89496,0 -41.54945,9.680393 -54.96019,24.971373 -3.61474,-1.71386 -7.35954,-3.19521 -11.21344,-4.43365 15.47663,-19.459915 39.33834,-31.943921 66.17363,-31.943921 z m -94.36146,13.427452 c 4.45901,0 7.99154,3.532539 7.99154,7.991549 0,2.56032 -1.1712,4.80521 -3.0071,6.25659 -1.65143,-0.0884 -3.31129,-0.13228 -4.98444,-0.13228 -1.67169,0 -3.3343,0.0495 -4.98437,0.13757 -1.83738,-1.45138 -3.00711,-3.70061 -3.00711,-6.26211 0,-4.45901 3.53246,-7.991546 7.99148,-7.991546 z m -94.466045,6.598149 c 18.669805,0 35.461535,7.90299 47.227575,20.54872 -3.54478,2.12262 -6.93524,4.47939 -10.15052,7.04429 -9.4865,-9.53345 -22.60101,-15.45438 -37.077055,-15.45438 -14.478652,0 -27.596939,5.92339 -37.088089,15.45982 -3.213996,-2.56501 -6.601852,-4.92083 -10.144932,-7.04421 11.770469,-12.64804 28.561361,-20.55424 47.233021,-20.55424 z m 188.827505,0 c 18.69222,0 35.50352,7.92038 47.27153,20.59283 -3.54297,2.12731 -6.93173,4.48611 -10.14493,7.05517 -9.49058,-9.56413 -22.62406,-15.50937 -37.1266,-15.50937 -14.44797,0 -27.54119,5.89837 -37.02754,15.39927 -3.21816,-2.56256 -6.61399,-4.91335 -10.16149,-7.03321 11.76824,-12.6198 28.54114,-20.50469 47.18903,-20.50469 z M 94.471635,127.34627 c 11.942815,0 22.745615,4.76224 30.627705,12.4913 -2.64949,2.54819 -5.1436,5.25422 -7.47379,8.10164 -5.93836,-5.94395 -14.12239,-9.64384 -23.153915,-9.64384 -9.033525,0 -17.222249,3.70307 -23.164914,9.64929 -2.330683,-2.84746 -4.824075,-5.55285 -7.473789,-8.10165 7.886476,-7.73193 18.693203,-12.49674 30.638703,-12.49674 z m 188.827505,0 c 11.97373,0 22.80098,4.7873 30.68825,12.55185 -2.64752,2.55106 -5.13993,5.2577 -7.46831,8.1072 -5.94353,-5.98277 -14.15486,-9.70995 -23.21994,-9.70995 -8.99774,0 -17.15641,3.67279 -23.09329,9.57766 -2.33122,-2.84296 -4.82964,-5.54653 -7.47931,-8.09057 7.88096,-7.69598 18.65847,-12.43619 30.5726,-12.43619 z M 94.471635,146.91481 c 7.159595,0 13.556295,3.0864 17.971195,7.99699 -2.18963,3.25754 -4.18178,6.65975 -5.9481,10.19452 -2.2227,-4.41619 -6.783952,-7.49031 -12.023095,-7.49031 -5.239937,0 -9.812448,3.07306 -12.03961,7.49031 -1.766853,-3.53178 -3.7584,-6.93324 -5.948145,-10.189 4.419477,-4.91464 10.824832,-8.00251 17.987755,-8.00251 z m 188.827505,0 c 7.19905,0 13.62565,3.12178 18.04286,8.07957 -2.19462,3.27005 -4.19086,6.68546 -5.95926,10.23311 -2.19942,-4.48139 -6.79654,-7.61148 -12.0836,-7.61148 -5.19202,0 -9.72979,3.01701 -11.97903,7.36914 -1.76481,-3.51825 -3.74702,-6.90766 -5.93166,-10.15053 4.41683,-4.86561 10.78851,-7.91981 17.91069,-7.91981 z m -188.827505,19.3206 c 2.730859,0 4.852195,2.13786 4.852195,4.86872 0,2.60466 -1.929713,4.65169 -4.47772,4.83564 -0.125102,-5.3e-4 -0.249071,-0.004 -0.374551,-0.004 -0.125102,0 -0.249449,0.004 -0.374551,0.004 -2.549254,-0.18407 -4.494199,-2.23098 -4.494199,-4.83564 0,-2.73086 2.137852,-4.86872 4.868712,-4.86872 z m 188.827505,0 c 2.73082,0 4.85215,2.13786 4.85215,4.86872 0,2.60466 -1.92975,4.65169 -4.47764,4.83564 -0.1251,-5.3e-4 -0.24907,-0.004 -0.37455,-0.004 -0.12548,0 -0.24945,0.004 -0.37455,0.004 -2.54733,-0.18558 -4.4942,-2.23238 -4.4942,-4.83564 0,-2.73086 2.13785,-4.86872 4.86871,-4.86872 z M 0,170.77916 v 8.53671 c 11.257739,0 20.828598,6.85958 24.8448,16.6329 h 8.999357 C 29.431181,181.41929 15.93978,170.77916 0,170.77916 Z m 377.87531,0 c -15.93978,0 -29.43639,10.64001 -33.84963,25.16961 h 9.00495 c 4.01563,-9.77484 13.58577,-16.6329 24.84468,-16.6329 z M 0,189.68111 v 6.26766 H 12.904328 C 9.871748,192.14105 5.208189,189.68111 0,189.68111 Z m 377.87531,0 c -5.20811,0 -9.87163,2.45994 -12.90421,6.26766 h 12.90421 z" />
    </pattern>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient13"
       gradientUnits="userSpaceOnUse"
       x="25.795774"
       y="69.7183">
      <meshrow
         id="meshrow13">
        <meshpatch
           id="meshpatch13">
          <stop
             path="c 53.9155,0  107.831,0  161.746,0"
             style="stop-color:#ffffff;stop-opacity:0.6452514"
             id="stop13" />
          <stop
             path="c 0,49.6162  0,99.2324  0,148.849"
             style="stop-color:#7daca7;stop-opacity:0.6452514"
             id="stop14" />
          <stop
             path="c -53.9155,0  -107.831,0  -161.746,0"
             style="stop-color:#ffffff;stop-opacity:0.6452514"
             id="stop15" />
          <stop
             path="c 0,-49.6162  0,-99.2324  0,-148.849"
             style="stop-color:#7daca7;stop-opacity:0.6452514"
             id="stop16" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient18"
       gradientUnits="userSpaceOnUse"
       x="-1.0457746"
       y="-0.69718319">
      <meshrow
         id="meshrow18">
        <meshpatch
           id="meshpatch18">
          <stop
             path="c 70.8803,0  141.761,0  212.641,0"
             style="stop-color:#b7bba0;stop-opacity:0.83984375"
             id="stop11" />
          <stop
             path="c 0,99.581  0,199.162  0,298.743"
             style="stop-color:#2350f1;stop-opacity:1"
             id="stop12" />
          <stop
             path="c -70.8803,0  -141.761,0  -212.641,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop17" />
          <stop
             path="c 0,-99.581  0,-199.162  0,-298.743"
             style="stop-color:#2350f1;stop-opacity:1"
             id="stop18" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:groupmode="layer"
     id="layer4"
     inkscape:label="Layer 2">
    <rect
       style="fill:url(#meshgradient18);stroke-width:0.264583;fill-opacity:1"
       id="rect1"
       width="212.64085"
       height="298.74295"
       x="-1.0457746"
       y="-0.69718319" />
  </g>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1">
    <path
       id="path18"
       style="opacity:1;fill:url(#pattern25);fill-opacity:1;stroke:#d85e2f;stroke-width:0.331;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.99386501"
       d="m 99.520819,165.28614 c 0,0 3.866851,7.35455 2.209681,11.97267 -1.65716,4.61811 -2.099078,3.24997 -3.645769,9.5785 -1.546689,6.32854 -1.326017,16.24882 -1.326017,17.44611 0,1.19729 0.221206,3.59206 0.773596,9.57851 0.552389,5.98645 1.104842,5.98633 1.104842,5.98633 h 6.738088 9.50175 6.7386 c 0,0 0.55194,1.2e-4 1.10433,-5.98633 0.55239,-5.98645 0.7736,-8.38122 0.7736,-9.57851 0,-1.19729 0.22067,-11.11757 -1.32602,-17.44611 -1.54669,-6.32853 -1.98861,-4.96039 -3.64577,-9.5785 -1.65717,-4.61812 2.20968,-11.97267 2.20968,-11.97267 h -6.95926 -7.29207 z"
       inkscape:label="vaza" />
    <g
       id="g43"
       transform="matrix(-0.87292454,0,0,-0.87292454,193.9706,257.95917)"
       style="display:inline"
       inkscape:label="bordo">
      <g
         id="g39">
        <ellipse
           style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="ellipse37"
           cx="92.551048"
           cy="119.3926"
           rx="12.723592"
           ry="12.374999" />
        <ellipse
           style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="ellipse38"
           cx="118.34682"
           cy="139.26231"
           rx="13.769366"
           ry="13.420774" />
        <ellipse
           style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="ellipse39"
           cx="91.679573"
           cy="153.90317"
           rx="13.943662"
           ry="14.46655" />
      </g>
      <ellipse
         style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
         id="ellipse40"
         cx="136.64789"
         cy="120.26408"
         rx="10.109155"
         ry="9.411972" />
      <ellipse
         style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
         id="ellipse41"
         cx="70.066902"
         cy="133.51054"
         rx="8.0176058"
         ry="7.669014" />
      <ellipse
         style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
         id="ellipse42"
         cx="116.95246"
         cy="102.6602"
         rx="9.5862675"
         ry="9.2376757" />
      <ellipse
         style="opacity:1;fill:#7d0c21;fill-opacity:1;stroke:#d85e2f;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
         id="ellipse43"
         cx="128.28169"
         cy="163.14084"
         rx="7.669014"
         ry="6.9718308" />
    </g>
    <g
       id="g44"
       style="display:inline;fill:#d23e74;fill-opacity:1;stroke:none;stroke-opacity:0.993865"
       inkscape:label="rozo">
      <g
         id="g37"
         style="fill:#d23e74;fill-opacity:1;stroke:none;stroke-opacity:0.993865">
        <g
           id="g34"
           style="fill:#d23e74;fill-opacity:1;stroke:none;stroke-opacity:0.993865">
          <ellipse
             style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
             id="ellipse32"
             cx="92.551048"
             cy="119.3926"
             rx="12.723592"
             ry="12.374999" />
          <ellipse
             style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
             id="ellipse33"
             cx="118.34682"
             cy="139.26231"
             rx="13.769366"
             ry="13.420774" />
          <ellipse
             style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
             id="ellipse34"
             cx="91.679573"
             cy="153.90317"
             rx="13.943662"
             ry="14.46655" />
        </g>
        <ellipse
           style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="path34"
           cx="136.64789"
           cy="120.26408"
           rx="10.109155"
           ry="9.411972" />
        <ellipse
           style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="path35"
           cx="70.066902"
           cy="133.51054"
           rx="8.0176058"
           ry="7.669014" />
        <ellipse
           style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="path36"
           cx="116.95246"
           cy="102.6602"
           rx="9.5862675"
           ry="9.2376757" />
        <ellipse
           style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
           id="path37"
           cx="128.28169"
           cy="163.14084"
           rx="7.669014"
           ry="6.9718308" />
      </g>
      <ellipse
         style="opacity:1;fill:#d23e74;fill-opacity:1;stroke:none;stroke-width:0.330999;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
         id="path43"
         cx="142.57394"
         cy="153.55457"
         rx="9.7605639"
         ry="9.2376757" />
    </g>
    <path
       style="display:inline;fill:url(#meshgradient13);fill-opacity:1;stroke:#2c1c11;stroke-width:10.1;stroke-linecap:round;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:0.993865"
       d="M 25.795774,70.066891 V 218.56689 H 187.54225 V 69.7183 Z"
       id="path1"
       sodipodi:nodetypes="ccccc"
       sodipodi:insensitive="true"
       inkscape:label="prozor" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
